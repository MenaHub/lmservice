/**
 * Generated by orval v6.28.2 üç∫
 * Do not edit manually.
 * OpenAPI definition
 * OpenAPI spec version: v0
 */
import type {
  EntityModelUserEnquiryEntity,
  GetCollectionResourceUserenquiryentityGet1Params,
  PagedModelEntityModelUserEnquiryEntity,
  UserEnquiryEntityRequestBody,
} from './model';
import { customInstance } from '../boot/axios';

type SecondParameter<T extends (...args: any) => any> = Parameters<T>[1];

/**
 * get-userenquiryentity
 */
export const getCollectionResourceUserenquiryentityGet1 = (
  params?: GetCollectionResourceUserenquiryentityGet1Params,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<PagedModelEntityModelUserEnquiryEntity | string>(
    { url: `/userEnquiryEntities`, method: 'GET', params },
    options
  );
};
/**
 * create-userenquiryentity
 */
export const postCollectionResourceUserenquiryentityPost = (
  userEnquiryEntityRequestBody: UserEnquiryEntityRequestBody,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<EntityModelUserEnquiryEntity>(
    {
      url: `/userEnquiryEntities`,
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      data: userEnquiryEntityRequestBody,
    },
    options
  );
};
/**
 * get-userenquiryentity
 */
export const getItemResourceUserenquiryentityGet = (
  id: string,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<EntityModelUserEnquiryEntity>(
    { url: `/userEnquiryEntities/${id}`, method: 'GET' },
    options
  );
};
/**
 * update-userenquiryentity
 */
export const putItemResourceUserenquiryentityPut = (
  id: string,
  userEnquiryEntityRequestBody: UserEnquiryEntityRequestBody,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<EntityModelUserEnquiryEntity | void>(
    {
      url: `/userEnquiryEntities/${id}`,
      method: 'PUT',
      headers: { 'Content-Type': 'application/json' },
      data: userEnquiryEntityRequestBody,
    },
    options
  );
};
/**
 * delete-userenquiryentity
 */
export const deleteItemResourceUserenquiryentityDelete = (
  id: string,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<void>(
    { url: `/userEnquiryEntities/${id}`, method: 'DELETE' },
    options
  );
};
/**
 * patch-userenquiryentity
 */
export const patchItemResourceUserenquiryentityPatch = (
  id: string,
  userEnquiryEntityRequestBody: UserEnquiryEntityRequestBody,
  options?: SecondParameter<typeof customInstance>
) => {
  return customInstance<EntityModelUserEnquiryEntity | void>(
    {
      url: `/userEnquiryEntities/${id}`,
      method: 'PATCH',
      headers: { 'Content-Type': 'application/json' },
      data: userEnquiryEntityRequestBody,
    },
    options
  );
};
export type GetCollectionResourceUserenquiryentityGet1Result = NonNullable<
  Awaited<ReturnType<typeof getCollectionResourceUserenquiryentityGet1>>
>;
export type PostCollectionResourceUserenquiryentityPostResult = NonNullable<
  Awaited<ReturnType<typeof postCollectionResourceUserenquiryentityPost>>
>;
export type GetItemResourceUserenquiryentityGetResult = NonNullable<
  Awaited<ReturnType<typeof getItemResourceUserenquiryentityGet>>
>;
export type PutItemResourceUserenquiryentityPutResult = NonNullable<
  Awaited<ReturnType<typeof putItemResourceUserenquiryentityPut>>
>;
export type DeleteItemResourceUserenquiryentityDeleteResult = NonNullable<
  Awaited<ReturnType<typeof deleteItemResourceUserenquiryentityDelete>>
>;
export type PatchItemResourceUserenquiryentityPatchResult = NonNullable<
  Awaited<ReturnType<typeof patchItemResourceUserenquiryentityPatch>>
>;
